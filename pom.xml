<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.ajshedivy</groupId>
    <artifactId>restfuldemo</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>restfuldemo</name>

    <properties>

        <maven.compiler.release>17</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Global Maven settings -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Jakarta EE 10 targets Java 11, but it is also required to support Java 17 -->
        <maven.compiler.release>11</maven.compiler.release>

        <!-- The default value is changed to `false` since maven-war-plugin 3.0.0 -->
        <failOnMissingWebXml>false</failOnMissingWebXml>

        <!-- Official Maven Plugins -->
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-war-plugin.version>3.4.0</maven-war-plugin.version>
        <maven-dependency-plugin.version>3.6.1</maven-dependency-plugin.version>
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
        <maven-surefire-report-plugin.version>3.2.5</maven-surefire-report-plugin.version>

        <!-- sonar report -->
        <sonar-maven-plugin.version>3.11.0.3922</sonar-maven-plugin.version>

        <!-- Jakarta EE API 10.0.0 -->
        <jakartaee-api.version>10.0.0</jakartaee-api.version>

        <!-- Wildfly server -->
        <wildfly.version>31.0.1.Final</wildfly.version>
        <wildfly-maven-plugin.version>4.2.2.Final</wildfly-maven-plugin.version>
        <wildfly-arquillian.version>5.0.1.Final</wildfly-arquillian.version>
        <wildfly-jar-maven-plugin.version>8.1.0.Final</wildfly-jar-maven-plugin.version>
        <openshift-maven-plugin.version>1.11.0</openshift-maven-plugin.version>
        <resteasy.version>6.2.8.Final</resteasy.version>

    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-web-api</artifactId>
            <version>10.0.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.github.theprez</groupId>
            <artifactId>dotenv-java-ibmi</artifactId>
            <version>0.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.java-websocket</groupId>
            <artifactId>Java-WebSocket</artifactId>
            <version>1.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20220924</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.12.3</version>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>3.0.0</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>restfuldemo</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven3-plugin</artifactId>
                    <version>${cargo-maven3-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>io.openliberty.tools</groupId>
                    <artifactId>liberty-maven-plugin</artifactId>
                    <version>${liberty-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>wildfly</id>
            <properties>
                <!-- Wildfly server -->
                <wildfly.artifactId>wildfly-preview-dist</wildfly.artifactId>
                <wildfly.serverConfig>standalone-full.xml</wildfly.serverConfig>
                <jboss-as.home>${project.build.directory}/wildfly-preview-${wildfly.version}</jboss-as.home>
            </properties>
            <build>
                <plugins>

                    <!-- unpack a copy of WildFly-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven-dependency-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>${wildfly.artifactId}</artifactId>
                                            <version>${wildfly.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- The WildFly plugin deploys your war to a local running WildFly container -->
                    <!-- To use, run: mvn package wildfly:deploy -->
                    <!-- For Jakarta EE 9, use `wildfly-preview-dist` as artifactId instead to start
              and deploy applications-->
                    <!-- Run: mvn clean wildfly:run -PWildfly
              -Dwildfly.artifactId=wildfly-preview-dist -Dwildfly.version=22.0.0.Alpha1 -->
                    <!-- or set the `jboss-as.home` to run: mvn clean wildfly:run -PWildfly
              -Djboss-as.home=D:\appsvr\wildfly-preview-22.0.0.Alpha1-->
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${wildfly-maven-plugin.version}</version>
                        <configuration>
                            <!-- if a jboss-as.home or jboss.home property is not present, firstly
                      it will download
                              a copy of wildfly distribution automatically -->
                            <!-- <jossHome>${env.WILDFLY_HOME}</jbossHome>-->
                            <!--<jbossHome>D:\appsvr\wildfly-preview-22.0.0.Alpha1</jbossHome>-->

                            <!-- To deploy a running wildfly server -->
                            <hostname>idevphp.idevcloud.com</hostname>
                            <port>9990</port>
                            <username>admin</username>
                            <password>admin123$</password>

                            <!-- or set a wildfly.id property to add a server in settings.xml -->
                            <!--<id>wildfly-svr</id> -->
                            <!-- <scripts>
                          <script>config.cli</script>
                      </scripts> -->

                            <!-- required for enabling OpenIdConnect -->
                            <!--<commands>
                            <command>/subsystem=undertow/application-security-domain=other:write-attribute(name=integrated-jaspi,
                      value=false)</command>
                          <command>reload</command>
                      </commands>-->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <repositories>
                <repository>
                    <id>opensaml</id>
                    <url>https://build.shibboleth.net/nexus/content/repositories/releases/</url>
                </repository>
            </repositories>
        </profile>
    </profiles>

</project>